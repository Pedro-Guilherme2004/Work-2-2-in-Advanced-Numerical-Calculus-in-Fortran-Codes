! Bisection Method example in Fortran
PROGRAM bisection
    IMPLICIT NONE
    REAL :: a, b, c, tol, f_a, f_b, f_c, x
    INTEGER :: max_iter, iter

    ! Define the function to find the root
    INTERFACE
        FUNCTION function_1(x)
            REAL :: x
            REAL :: function_1
        END FUNCTION function_1
    END INTERFACE

    ! Initialize user inputs
    PRINT *, "Enter interval [a, b]: "
    READ *, a, b
    PRINT *, "Enter tolerance: "
    READ *, tol
    PRINT *, "Enter maximum number of iterations: "
    READ *, max_iter

    ! Check if the initial interval is valid
    f_a = function_1(a)
    f_b = function_1(b)
    IF (f_a * f_b > 0.0) THEN
        PRINT *, "Invalid interval. f(a) and f(b) must have opposite signs."
        STOP
    END IF

    ! Bisection method
    iter = 0
    DO WHILE (ABS(b - a) > tol .AND. iter < max_iter)
        c = (a + b) / 2.0
        f_c = function_1(c)

        IF (f_c == 0.0) EXIT
        IF (f_a * f_c < 0.0) THEN
            b = c
            f_b = f_c
        ELSE
            a = c
            f_a = f_c
        END IF

        iter = iter + 1
    END DO

    ! Print the result
    PRINT *, "Root found: ", c
    PRINT *, "Iterations: ", iter

END PROGRAM bisection

FUNCTION function_1(x)
         REAL :: x
        function_1 = x**3 - x - 1
END FUNCTION function_1
